"use strict";function _typeof(t){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function _regeneratorRuntime(){_regeneratorRuntime=function(){return c};var c={},t=Object.prototype,u=t.hasOwnProperty,l=Object.defineProperty||function(t,e,n){t[e]=n.value},e="function"==typeof Symbol?Symbol:{},r=e.iterator||"@@iterator",n=e.asyncIterator||"@@asyncIterator",o=e.toStringTag||"@@toStringTag";function a(t,e,n){return Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}),t[e]}try{a({},"")}catch(t){a=function(t,e,n){return t[e]=n}}function i(t,e,n,r){var o,a,c,i,e=e&&e.prototype instanceof f?e:f,e=Object.create(e.prototype),r=new b(r||[]);return l(e,"_invoke",{value:(o=t,a=n,c=r,i="suspendedStart",function(t,e){if("executing"===i)throw new Error("Generator is already running");if("completed"===i){if("throw"===t)throw e;return L()}for(c.method=t,c.arg=e;;){var n=c.delegate;if(n){n=function t(e,n){var r=n.method,o=e.iterator[r];if(void 0===o)return n.delegate=null,"throw"===r&&e.iterator.return&&(n.method="return",n.arg=void 0,t(e,n),"throw"===n.method)||"return"!==r&&(n.method="throw",n.arg=new TypeError("The iterator does not provide a '"+r+"' method")),d;r=s(o,e.iterator,n.arg);if("throw"===r.type)return n.method="throw",n.arg=r.arg,n.delegate=null,d;o=r.arg;return o?o.done?(n[e.resultName]=o.value,n.next=e.nextLoc,"return"!==n.method&&(n.method="next",n.arg=void 0),n.delegate=null,d):o:(n.method="throw",n.arg=new TypeError("iterator result is not an object"),n.delegate=null,d)}(n,c);if(n){if(n===d)continue;return n}}if("next"===c.method)c.sent=c._sent=c.arg;else if("throw"===c.method){if("suspendedStart"===i)throw i="completed",c.arg;c.dispatchException(c.arg)}else"return"===c.method&&c.abrupt("return",c.arg);i="executing";n=s(o,a,c);if("normal"===n.type){if(i=c.done?"completed":"suspendedYield",n.arg===d)continue;return{value:n.arg,done:c.done}}"throw"===n.type&&(i="completed",c.method="throw",c.arg=n.arg)}})}),e}function s(t,e,n){try{return{type:"normal",arg:t.call(e,n)}}catch(t){return{type:"throw",arg:t}}}c.wrap=i;var d={};function f(){}function y(){}function h(){}var e={},p=(a(e,r,function(){return this}),Object.getPrototypeOf),p=p&&p(p(C([]))),m=(p&&p!==t&&u.call(p,r)&&(e=p),h.prototype=f.prototype=Object.create(e));function v(t){["next","throw","return"].forEach(function(e){a(t,e,function(t){return this._invoke(e,t)})})}function g(c,i){var e;l(this,"_invoke",{value:function(n,r){function t(){return new i(function(t,e){!function e(t,n,r,o){var a,t=s(c[t],c,n);if("throw"!==t.type)return(n=(a=t.arg).value)&&"object"==_typeof(n)&&u.call(n,"__await")?i.resolve(n.__await).then(function(t){e("next",t,r,o)},function(t){e("throw",t,r,o)}):i.resolve(n).then(function(t){a.value=t,r(a)},function(t){return e("throw",t,r,o)});o(t.arg)}(n,r,t,e)})}return e=e?e.then(t,t):t()}})}function w(t){var e={tryLoc:t[0]};1 in t&&(e.catchLoc=t[1]),2 in t&&(e.finallyLoc=t[2],e.afterLoc=t[3]),this.tryEntries.push(e)}function x(t){var e=t.completion||{};e.type="normal",delete e.arg,t.completion=e}function b(t){this.tryEntries=[{tryLoc:"root"}],t.forEach(w,this),this.reset(!0)}function C(e){if(e){var n,t=e[r];if(t)return t.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length))return n=-1,(t=function t(){for(;++n<e.length;)if(u.call(e,n))return t.value=e[n],t.done=!1,t;return t.value=void 0,t.done=!0,t}).next=t}return{next:L}}function L(){return{value:void 0,done:!0}}return l(m,"constructor",{value:y.prototype=h,configurable:!0}),l(h,"constructor",{value:y,configurable:!0}),y.displayName=a(h,o,"GeneratorFunction"),c.isGeneratorFunction=function(t){t="function"==typeof t&&t.constructor;return!!t&&(t===y||"GeneratorFunction"===(t.displayName||t.name))},c.mark=function(t){return Object.setPrototypeOf?Object.setPrototypeOf(t,h):(t.__proto__=h,a(t,o,"GeneratorFunction")),t.prototype=Object.create(m),t},c.awrap=function(t){return{__await:t}},v(g.prototype),a(g.prototype,n,function(){return this}),c.AsyncIterator=g,c.async=function(t,e,n,r,o){void 0===o&&(o=Promise);var a=new g(i(t,e,n,r),o);return c.isGeneratorFunction(e)?a:a.next().then(function(t){return t.done?t.value:a.next()})},v(m),a(m,o,"Generator"),a(m,r,function(){return this}),a(m,"toString",function(){return"[object Generator]"}),c.keys=function(t){var e,n=Object(t),r=[];for(e in n)r.push(e);return r.reverse(),function t(){for(;r.length;){var e=r.pop();if(e in n)return t.value=e,t.done=!1,t}return t.done=!0,t}},c.values=C,b.prototype={constructor:b,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(x),!t)for(var e in this)"t"===e.charAt(0)&&u.call(this,e)&&!isNaN(+e.slice(1))&&(this[e]=void 0)},stop:function(){this.done=!0;var t=this.tryEntries[0].completion;if("throw"===t.type)throw t.arg;return this.rval},dispatchException:function(n){if(this.done)throw n;var r=this;function t(t,e){return a.type="throw",a.arg=n,r.next=t,e&&(r.method="next",r.arg=void 0),!!e}for(var e=this.tryEntries.length-1;0<=e;--e){var o=this.tryEntries[e],a=o.completion;if("root"===o.tryLoc)return t("end");if(o.tryLoc<=this.prev){var c=u.call(o,"catchLoc"),i=u.call(o,"finallyLoc");if(c&&i){if(this.prev<o.catchLoc)return t(o.catchLoc,!0);if(this.prev<o.finallyLoc)return t(o.finallyLoc)}else if(c){if(this.prev<o.catchLoc)return t(o.catchLoc,!0)}else{if(!i)throw new Error("try statement without catch or finally");if(this.prev<o.finallyLoc)return t(o.finallyLoc)}}}},abrupt:function(t,e){for(var n=this.tryEntries.length-1;0<=n;--n){var r=this.tryEntries[n];if(r.tryLoc<=this.prev&&u.call(r,"finallyLoc")&&this.prev<r.finallyLoc){var o=r;break}}var a=(o=o&&("break"===t||"continue"===t)&&o.tryLoc<=e&&e<=o.finallyLoc?null:o)?o.completion:{};return a.type=t,a.arg=e,o?(this.method="next",this.next=o.finallyLoc,d):this.complete(a)},complete:function(t,e){if("throw"===t.type)throw t.arg;return"break"===t.type||"continue"===t.type?this.next=t.arg:"return"===t.type?(this.rval=this.arg=t.arg,this.method="return",this.next="end"):"normal"===t.type&&e&&(this.next=e),d},finish:function(t){for(var e=this.tryEntries.length-1;0<=e;--e){var n=this.tryEntries[e];if(n.finallyLoc===t)return this.complete(n.completion,n.afterLoc),x(n),d}},catch:function(t){for(var e=this.tryEntries.length-1;0<=e;--e){var n,r,o=this.tryEntries[e];if(o.tryLoc===t)return"throw"===(n=o.completion).type&&(r=n.arg,x(o)),r}throw new Error("illegal catch attempt")},delegateYield:function(t,e,n){return this.delegate={iterator:C(t),resultName:e,nextLoc:n},"next"===this.method&&(this.arg=void 0),d}},c}function asyncGeneratorStep(t,e,n,r,o,a,c){try{var i=t[a](c),u=i.value}catch(t){return void n(t)}i.done?e(u):Promise.resolve(u).then(r,o)}function _asyncToGenerator(i){return function(){var t=this,c=arguments;return new Promise(function(e,n){var r=i.apply(t,c);function o(t){asyncGeneratorStep(r,e,n,o,a,"next",t)}function a(t){asyncGeneratorStep(r,e,n,o,a,"throw",t)}o(void 0)})}}var amount,validAmount,continentCode,countries,countryCard,countryCode,randomIndex,randomCountry,chosenCountry,code,continentSelect=document.querySelector("#continent"),amountInput=document.querySelector("#amount"),error=document.querySelector(".error-text"),clearAllBtn=document.querySelector(".clear"),submitBtn=document.querySelector(".submit"),countryResults=document.querySelector(".country__results"),countryBox=document.querySelector(".country__box"),modalShadow=document.querySelector(".modal-shadow"),closeModalBtn=document.querySelector(".close"),countryName=document.querySelector(".name"),capital=document.querySelector(".capital"),population=document.querySelector(".population"),currency=document.querySelector(".currency"),subregion=document.querySelector(".subregion"),languages=document.querySelector(".languages"),loader=document.querySelector(".loader"),ID=0,divsArr=[],alphabeticalArr=[],URL="https://countries.trevorblades.com/graphql",checkForm=function(){amount=parseInt(amountInput.value),(validAmount=2<=amount&&amount<=10)?"none"!==continentSelect.value?(clearInputs(),createResults()):error.textContent="Please complete all fields correctly.":(clearInputs(),error.textContent="Please complete all fields correctly.")},queryFetch=function(t,e){return fetch(URL,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({query:t,variables:e})}).then(function(t){return t.json()})},getContinentCountries=(queryFetch("\n    query {\n    continents {\n        code\n        name\n    }\n}\n").then(function(t){t.data.continents.forEach(function(t){var e=document.createElement("option");e.value=t.code,e.innerText=t.name,continentSelect.append(e)})}),function(t){return queryFetch("\n    query getCountries($code: ID!) {\n        continent(code: $code) {\n            countries {\n                name\n                code\n            }\n        }\n    }\n    ",{code:t}).then(function(t){return t.data.continent.countries})}),createResults=function(){countryResults.style.display="block",countryResults.classList.add("results-animation"),countryBox.innerHTML="",countries.forEach(function(t){(countryCard=document.createElement("div")).classList.add("country__card"),countryCode=t.code.toLowerCase(),countryCard.setAttribute("data-code",countryCode),countryCard.setAttribute("id",ID),countryCard.innerHTML='\n        <img class="country__card-flag" src="https://flagcdn.com/'.concat(countryCode,'.svg" loading="lazy" alt="flag of a ').concat(t.name,'">\n        <div class="country__card-info">\n            <h3 class="country__card-name">').concat(t.name,'</h3>\n            <p class="country__card-details" onclick=\'showModal(').concat(ID,')\'><i class="fa-solid fa-circle-info"></i></p>\n        </div>'),countryBox.append(countryCard),ID++,divsArr.push(countryCard),divsArr.forEach(function(t){return t.style.display="none"})}),showRandomCountries(),setTimeout(removeResultsAnimation,1e3)},showRandomCountries=function(){"AN"===continentCode&&5<amount&&(error.textContent="There are only 5 countries in Antarctica. Displaying 5 countries instead.");for(var t=0;t<amount;t++)randomIndex=Math.floor(Math.random()*divsArr.length),randomCountry=divsArr[randomIndex],divsArr.splice(randomIndex,1),alphabeticalArr.push(randomCountry);alphabeticalArr.sort(function(t,e){return t.id-e.id}),alphabeticalArr.forEach(function(t){t.style.display="flex"})},removeResultsAnimation=function(){countryResults.classList.remove("results-animation")},showModal=function(t){chosenCountry=document.getElementById(t),"block"!==modalShadow.style.display?(modalShadow.style.display="block",cleanInfo(),displayMoreInfo(chosenCountry)):modalShadow.style.display="none",modalShadow.classList.toggle("modal-animation")},displayMoreInfo=function(){var e=_asyncToGenerator(_regeneratorRuntime().mark(function t(e){return _regeneratorRuntime().wrap(function(t){for(;;)switch(t.prev=t.next){case 0:code=e.getAttribute("data-code"),loader.style.visibility="visible",loader.classList.add("loader-animation"),countryName.textContent="your country",setTimeout(_asyncToGenerator(_regeneratorRuntime().mark(function t(){var e;return _regeneratorRuntime().wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,fetch("https://restcountries.com/v3.1/alpha/".concat(code));case 2:return e=t.sent,t.next=5,e.json();case 5:e=t.sent,countryName.textContent=e[0].name.common||"No information found!",capital.textContent=e[0].capital||"No information found!",population.textContent=e[0].population||"No information found!",currency.textContent=e[0].currencies?"".concat(Object.values(e[0].currencies)[0].name,", ").concat(Object.values(e[0].currencies)[0].symbol):"No information found!",subregion.textContent=e[0].subregion||"No information found!",languages.textContent=e[0].languages?Object.values(e[0].languages).join(", "):"No information found!",loader.style.visibility="hidden",loader.classList.remove("loader-animation");case 14:case"end":return t.stop()}},t)})),1e3);case 5:case"end":return t.stop()}},t)}));return function(t){return e.apply(this,arguments)}}(),cleanInfo=function(){countryName.textContent="",capital.textContent="",population.textContent="",currency.textContent="",subregion.textContent="",languages.textContent=""},clearInputs=function(){error.textContent="",countryBox.innerHTML="",countryResults.style.display="none",divsArr=[],alphabeticalArr=[]},clearAllInputs=function(){continentSelect.selectedIndex=0,amountInput.value="",clearInputs()},enterCheck=function(t){"Enter"===t.key&&checkForm()};continentSelect.addEventListener("change",function(){var e=_asyncToGenerator(_regeneratorRuntime().mark(function t(e){return _regeneratorRuntime().wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return continentCode=e.target.value,t.next=3,getContinentCountries(continentCode);case 3:countries=t.sent;case 4:case"end":return t.stop()}},t)}));return function(t){return e.apply(this,arguments)}}()),amountInput.addEventListener("keyup",enterCheck),closeModalBtn.addEventListener("click",showModal),window.addEventListener("click",function(t){return t.target===modalShadow&&showModal()}),clearAllBtn.addEventListener("click",clearAllInputs),submitBtn.addEventListener("click",checkForm);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
